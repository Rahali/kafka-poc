spring:
 application:
  name: kafka-connect

logging:
  level:
    root: info
    poc.kafka: debug  file: /var/tmp/apps/kafka-connect/kafka-connect

kafka:
  kafkaConsumer:
    bootstrap.servers: '172.17.104.231:8092,172.17.104.232:8092,172.17.104.233:8092'
    group.id: 'test-consumers'
    enable.auto.commit: true
    #auto.commit.interval.ms: 5000
    fetch.min.bytes: 100000
    session.timeout.ms: 60000
    auto.offset.reset: 'earliest'
    max.poll.records: 5000
    key.deserializer: 'org.apache.kafka.common.serialization.ShortDeserializer'
    value.deserializer: 'org.apache.kafka.common.serialization.ByteBufferDeserializer'

  kafkaProducer:
    #Kafka configuration changes according to the use cases
    bootstrap.servers: '172.17.5.36:7092' #Brokers
    acks: 'all'
    batch.size: 150000
    buffer.memory: 33554432
    client.id: 8
    retries: 1
    linger.ms: 10
    compression.type: 'lz4'
    #key.serializer: 'org.apache.kafka.common.serialization.IntegerSerializer'
    #value.serializer: 'assignments.kafka.common.serialization.StockTradeSerializer'
    #value.serializer: 'poc.kafka.serialization.KCStringSerializer'
    #value.serializer: 'org.apache.kafka.common.serialization.StringSerializer'
    #key.serializer: 'poc.kafka.serialization.KeySchemalessSerializer'
    #value.serializer: 'poc.kafka.serialization.ValueSchemalessSerializer'
    #value.serializer: 'poc.kafka.serialization.PersonSerializer'
    #value.serializer: 'poc.kafka.serialization.PersonBinarySerializer'
    #key.serializer: 'poc.kafka.serialization.Key1Serializer'
    #value.serializer: 'poc.kafka.serialization.Value1Serializer'
    key.serializer: 'poc.kafka.serialization.Key2Serializer'
    value.serializer: 'poc.kafka.serialization.Value2Serializer'    
    
  metaData:
    topic: personwithdate4
    partitions: 0
    records: 10
    
