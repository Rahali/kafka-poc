spring:
 application:
  name: kafka-interceptors

logging:
  level:    root: info
    poc.kafka: debug  file: /var/log/apps/kafka-interceptors/kafka-interceptors

kafka:
  kafkaStreams:
    bootstrap.servers: '172.17.5.36:7092'
    application.id: 'kafka-interceptors11'
    default.key.serde: org.apache.kafka.common.serialization.Serdes$StringSerde
    default.value.serde: org.apache.kafka.common.serialization.Serdes$DoubleSerde

  kafkaProducer:
    bootstrap.servers: '172.17.5.36:7092' #Brokers
    acks: 'all'
    batch.size: 150000
    buffer.memory: 33554432
    #client.id: 8
    retries: 1
    linger.ms: 10
    compression.type: 'lz4'
    interceptor.classes: 'poc.kafka.interceptor.PInterceptor'
    key.serializer: 'org.apache.kafka.common.serialization.LongSerializer'
    #value.serializer: 'poc.kafka.domain.serialization.OrderSerializer'
    value.serializer: 'poc.kafka.domain.serialization.CustomerSerializer'
    
  kafkaConsumer:
    bootstrap.servers: '172.17.5.36:7092' #Brokers
    #client.id: 8
    group.id: 'kafka-interceptor'
    enable.auto.commit: true
    #auto.commit.interval.ms: 5000
    fetch.min.bytes: 100000
    session.timeout.ms: 60000
    auto.offset.reset: 'earliest'
    max.poll.records: 5000
    interceptor.classes: 'poc.kafka.interceptor.CInterceptor'
    key.deserializer: 'org.apache.kafka.common.serialization.LongDeserializer'
    value.deserializer: 'poc.kafka.domain.serialization.CustomerDeserializer'    
    
  metaData:
    topic: ki-1